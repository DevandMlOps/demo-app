pipeline {
    agent any

    environment {
        SONARQUBE_URL = "http://sonarqube:9000"
        SONARQUBE_TOKEN = credentials('SonarQube_jenkins') // Asegúrate de que 'SonarQube_jenkins' es el ID correcto en Jenkins
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Wait for SonarQube') {
            steps {
                // Esperar 10 segundos para dar tiempo a SonarQube para arrancar completamente
                sh 'sleep 10'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') { // 'SonarQube' debe ser el nombre de la instalación de SonarQube en Jenkins
                    sh 'mvn sonar:sonar -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONARQUBE_TOKEN'
                }
            }
        }

        stage('Wait for Quality Gate') {
            steps {
                // Esperar 10 segundos para dar tiempo a Quality Gate
                sh 'sleep 10'
            }
        }

        stage('Quality Gate') {
            steps {
                timeout(time: 10, unit: 'MINUTES') {
                    script {
                        def qg = waitForQualityGate(abortPipeline: false, waitForQualityGate: true)
                        echo "Quality Gate status: ${qg.status}"
                        echo "Quality Gate details: ${qg}"
                        
                        if (qg.status != 'OK') {
                            echo "Quality Gate failed with status: ${qg.status}"
                            echo "Quality Gate conditions:"
                            qg.conditions.each { condition ->
                                echo "- ${condition.metricKey}: ${condition.status}"
                            }
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        } else {
                            echo "Quality Gate passed successfully"
                        }
                    }
                }
            }
        }
    }
}
